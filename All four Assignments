def getValues(n):
  weights = []
  for i in range(n):
    weight = float(input('Enter a weight'))
    weights.append(weight)
  return weights [2:]

def calcAverage(alist):
  if len(alist) < 1:
    print('Not enough elements')
  else:
    print(sum(alist)/len(alist))

n_weights = int(input('Enter number of weights: '))
L = getValues(n_weights)
avg = calcAverage(L)
print(avg)

allData = { # dictionary of values for countries
    'US': {'pop':325.7, 'gdp': 19.39, 'ccy': 'USD', 'fx':  1.0},
    'CA': {'pop': 36.5, 'gdp':  1.65, 'ccy': 'CAD', 'fx':  1.35},
    'MX': {'pop':129.2, 'gdp':  1.15, 'ccy': 'MXN', 'fx': 19.68}
    }

while True:
  countrycode=input('Enter country code (US, CA, or MX): ')
  if countrycode=='exit':
    break
  if countrycode not in allData.keys():
    continue
  
  stat=input('Enter country stat (pop, gdp, ccy, or fx): ')
  if stat=='exit':
    break
  if stat not in allData[countrycode].keys():
    continue


  if stat== 'pop':
      print(f'{countrycode} Population: {allData[countrycode][stat]} million people')
  elif stat== 'gdp':
      print(f' {countrycode} GDP: {allData[countrycode][stat]} trillion')
  elif stat== 'ccy':
      print(f'{countrycode} Currency: {allData[countrycode][stat]}')
  else:
      print(f'{countrycode}FX: {allData[countrycode][stat]} exchange rate')



def getParkingHours():
  hours=int(input('Enter parking hours: '))
  return hours

def calcParkingFee(x):
  fee = 2.5 * x
  if fee <= 6:
    return 6
  elif fee >= 20:
    return 20
  else:
    return fee

hours = getParkingHours()
fee = calcParkingFee(hours)
print(f'Total fee:{fee}')
def calcTuition(credits):
  if credits >= 12:
    print(f'Tuition = {20000}$')
  elif credits >= 1:
    print(f'Tuition = {1200 + 1700*credits}$')
  else:
    print('Invalid number of credits')

numbercredit = int(input('Enter number of credits: '))
calcTuition(numbercredit)
